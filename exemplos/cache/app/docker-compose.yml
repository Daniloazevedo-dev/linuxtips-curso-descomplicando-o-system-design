# docker-compose.yml
services:
  app:
    build:
      context: ./cache-app
      dockerfile: Dockerfile
    command: ["air", "-c", ".air.toml"]
    environment:
      DATABASE_USER: "postgres"
      DATABASE_PASSWORD: "postgres"
      DATABASE_HOST: "postgres"
      DATABASE_PORT: "5432"
      DATABASE_DB: "app"

      DB_DSN: "postgres://postgres:postgres@postgres:5432/app?sslmode=disable"
      REDIS_ADDR: "redis:6379"
      PORT: "8080"
    volumes:
      - ./cache-app:/app
      - gocache:/go/pkg/mod
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d app -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - redisdata:/data

volumes:
  gocache:
  pgdata:
  redisdata:
